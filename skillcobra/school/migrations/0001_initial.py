# Generated by Django 4.2.14 on 2024-11-10 12:45

from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields
import skillcobra.school.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Please make this a maximum of 100 characters and unique', max_length=200)),
                ('slug', models.SlugField(help_text='Please make this a maximum of 100 characters and unique')),
                ('short_description', django_ckeditor_5.fields.CKEditor5Field(help_text='Please make this a maximum of 220 words', max_length=5000)),
                ('course_description', django_ckeditor_5.fields.CKEditor5Field(help_text='Please make this a maximum of 5000 words')),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('expert', 'Expert')], default='beginner', help_text='Please select the level of this course', max_length=100)),
                ('is_free_course', models.BooleanField(default=False)),
                ('require_login', models.BooleanField(default=True)),
                ('require_enrollment', models.BooleanField(default=True)),
                ('regular_price', models.DecimalField(decimal_places=2, default=0.0, help_text='Please enter a valid decimal number', max_digits=12)),
                ('discount_price', models.DecimalField(decimal_places=2, default=0.0, help_text='Please enter a valid decimal number', max_digits=12)),
                ('allow_student_submission', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('approved', 'Approved')], default='draft', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CourseCurriculum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_title', models.CharField(max_length=100)),
                ('module_slug', models.SlugField(max_length=100)),
                ('module_description', models.TextField(blank=True, help_text='Please make this a maximum of 5000 words', max_length=5000)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_curriculum', to='school.course')),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Please make this a maximum of 220 words', max_length=5000)),
                ('has_free_preview', models.BooleanField(default=True)),
                ('lecture_video_url', models.CharField(blank=True, help_text='\n        Please enter a valid video link or embedded URL or\n        live blank if no video is available', max_length=5000)),
                ('video_runtime_hours', models.IntegerField(default=0)),
                ('video_runtime_minutes', models.IntegerField(default=0)),
                ('video_runtime_seconds', models.IntegerField(default=0)),
                ('lecture_attachments', models.FileField(blank=True, null=True, upload_to=skillcobra.school.utils.upload_lecture_attachment)),
                ('module_lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_module_lecture', to='school.coursecurriculum')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('value', models.CharField(blank=True, max_length=255)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='school.category')),
            ],
        ),
        migrations.CreateModel(
            name='LectureVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_link', models.URLField(blank=True, help_text='Please enter a valid YouTube link', max_length=5000)),
                ('vimeo_link', models.URLField(blank=True, help_text='Please enter a valid Vimeo link', max_length=5000)),
                ('embedded_url', models.CharField(blank=True, help_text='Please enter an embedded URL', max_length=5000)),
                ('video_runtime', models.CharField(blank=True, max_length=100)),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_lecture', to='school.lecture')),
            ],
        ),
        migrations.CreateModel(
            name='LectureAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='lecture_attachments/')),
                ('description', models.CharField(blank=True, max_length=200)),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachment_lecture', to='school.lecture')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='course_category_subcategory', to='school.subcategory'),
        ),
    ]
